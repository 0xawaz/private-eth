## nginx configuration
## Ref: https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md
##
controller:
  name: controller
  image:
    registry: registry.k8s.io
    image: ingress-nginx/controller
    tag: "v1.10.0"
    pullPolicy: IfNotPresent
    runAsUser: 101

  config:
    # Access log
    disable-access-log: "false"

    # Log format
    log-format-escape-json: "true"
    log-format-upstream: '{"time": "$time_iso8601", "remote_addr":"$proxy_protocol_addr", "vhost":"$host", "path":"$uri", "status":$status, "http_user_agent":"$http_user_agent", "retry-after":"$sent_http_retry_after", "x-forward-for":"$proxy_add_x_forwarded_for", "content-type":"$sent_http_content_type", "http_transfer_encoding":"$http_transfer_encoding", "request_id":"$req_id", "remote_user":"$remote_user", "bytes_sent":$bytes_sent, "request_time":$request_time, "request_proto":"$server_protocol", "request_query":"$args", "request_length":$request_length, "method":"$request_method", "http_referrer":"$http_referer", "proxy_upstream_name":"$proxy_upstream_name"}'

    # performance tuning
    worker-processes: "auto"
    worker-cpu-affinity: ""
    # graceful shutdown recommendation: https://github.com/kubernetes/ingress-nginx/blob/master/Changelog.md#0260
    worker-shutdown-timeout: "240s"

    max-worker-connections: "16384"
    # The default of 0 means "max open files (system's limit) / worker-processes - 1024"
    max-worker-open-files: "0"
    enable-multi-accept: "true"

    use-gzip: "true"
    gzip-level: "5"
    gzip-types: "text/plain text/css text/html text/xml text/javascript application/ecmascript application/x-javascript application/json application/xml application/rss+xml"

    # APPS OPERATIONAL TUNING
    use-http2: "false"
    use-forwarded-headers: "true"
    enable-underscores-in-headers: "true"
    # ignore-invalid-headers: "false"
    hsts: "false"
    forwarded-for-header: "X-Forwarded-For"
    proxy-hide-headers: "Server, X-Powered-By, X-AspNet-Version, X-AspNet-Mvc-Version"
    server-tokens: "false"
    # client config
    client-header-buffer-size: "1k" # client_header_buffer_size
    large-client-header-buffers: "2 1k" # client_header_buffer_size
    client-body-buffer-size: "256k" #  client_body_buffer_size
    proxy-body-size: "8m" # client_max_body_size
    # client timeouts
    client-body-timeout: "60" # If after this time the client send nothing, nginx returns error “Request time out” (408). The default is 60.
    client-header-timeout: "60"
    # To resolve 502 issue: https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340
    keep-alive: "650" # keepalive_timeout https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#keep-alive
    keep-alive-requests: "10000" # keepalive_requests
    # proxy-connect-timeout: "40"
    proxy-send-timeout: "40" # proxy_send_timeout

    # Allow access to our domain only
    http-snippet: |
      # hide server identity
      # more_set_headers "Server: ";
      more_clear_headers Server;

  # Will add custom header to Nginx https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples/customization/custom-headers
  headers: {}

  # Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
  # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
  # is merged
  hostNetwork: true

  # Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
  # By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
  # to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
  dnsPolicy: ClusterFirst

  ## Use host ports 80 and 443
  daemonset:
    useHostPort: false

    hostPorts:
      http: 80
      https: 443
      ## healthz endpoint
      stats: 18080

  ## Required only if defaultBackend.enabled = false
  ## Must be <namespace>/<service_name>
  ##
  defaultBackendService: ""

  ## Election ID to use for status update
  ##
  electionID: ingress-controller-leader

  ## Name of the ingress class to route through this controller
  ##
  ingressClass: nginx

  # labels to add to the pod container metadata
  podLabels: {}
  #  key: value

  ## Allows customization of the external service
  ## the ingress will be bound to via DNS
  publishService:
    enabled: true
    ## Allows overriding of the publish service to bind to
    ## Must be <namespace>/<service_name>
    ##
    pathOverride: ""

  ## Limit the scope of the controller
  ##
  scope:
    enabled: false
    namespace: ""   # defaults to .Release.Namespace

  ## Additional command line arguments to pass to nginx-ingress-controller
  ## E.g. to specify the default SSL certificate you can use
  ## extraArgs:
  ##   default-ssl-certificate: "<namespace>/<secret_name>"
  extraArgs: {}

  ## Additional environment variables to set
  extraEnvs: []
  kind: DaemonSet

  # The update strategy to apply to the Deployment or DaemonSet
  ##
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

  # minReadySeconds to avoid killing pods before we are ready
  ##
  minReadySeconds: 0


  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
  #  - key: "key"
  #    operator: "Equal|Exists"
  #    value: "value"
  #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node_pool
            operator: In
            values:
            - apps

  # nodeSelector: {}

  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    port: 10254
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    port: 10254

  ## Annotations to be added to controller pods
  ##
  podAnnotations: {}

  replicaCount: 1

  minAvailable: 1

  resources:
    requests:
      cpu: 200m
      memory: 200Mi

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 11
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  ## Override NGINX template
  customTemplate:
    configMapName: ""
    configMapKey: ""

  service:
    annotations: {}
    # labels: {
    #   service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    # }
    clusterIP: "172.20.249.50"

    ## List of IP addresses at which the controller services are available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    # loadBalancerIP: "130.211.55.164"
    loadBalancerSourceRanges: []

    enableHttp: true
    enableHttps: true

    ## Set external traffic policy to: "Local" to preserve source IP on
    ## providers supporting it
    ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
    externalTrafficPolicy: Local

    healthCheckNodePort: 0

    targetPorts:
      http: http
      https: https

    type: LoadBalancer

    nodePorts:
      http: ""
      https: ""

  extraContainers: []

  extraVolumeMounts: []
  ## Additional volumeMounts to the controller main container.
  #  - name: copy-portal-skins
  #   mountPath: /var/lib/lemonldap-ng/portal/skins

  extraVolumes: []
  ## Additional volumes to the controller pod.
  #  - name: copy-portal-skins
  #    emptyDir: {}

  extraInitContainers: []
  ## Containers, which are run before the app containers are started.
  # - name: init-myservice
  #   image: busybox
  #   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']


  stats:
    enabled: true

    service:
      annotations: {}
      clusterIP: "172.20.115.50"

      ## List of IP addresses at which the stats service is available
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##
      externalIPs: []

      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 18080
      type: ClusterIP

  ## If controller.stats.enabled = true and controller.metrics.enabled = true, Prometheus metrics will be exported
  ##
  metrics:
    enabled: true

    service:
      annotations:
      prometheus.io/path: /metrics
      prometheus.io/scrape: "true"
      prometheus.io/port: "10254"

      clusterIP: "172.20.147.123"

      ## List of IP addresses at which the stats-exporter service is available
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##
      externalIPs: []

      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9913
      type: ClusterIP

    serviceMonitor:
      enabled: false
      additionalLabels:
        prometheus: k8s

  lifecycle: {}

  # priorityClassName: "high-priority"

## Rollback limit
##
revisionHistoryLimit: 10

## Default 404 backend
##
defaultBackend:

  ## If false, controller.defaultBackendService must be provided
  ##
  enabled: true

  name: default-backend
  image:
    repository: k8s.gcr.io/defaultbackend
    tag: "1.4"
    pullPolicy: IfNotPresent

  extraArgs: {}

  port: 8080

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
  #  - key: "key"
  #    operator: "Equal|Exists"
  #    value: "value"
  #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node_pool
            operator: In
            values:
            - apps

  # labels to add to the pod container metadata
  podLabels: {}
  #  key: value

  ## Node labels for default backend pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  # nodeSelector: {}

  ## Annotations to be added to default backend pods
  ##
  podAnnotations: {}

  replicaCount: 1

  minAvailable: 1

  resources: {}
  # limits:
  #   cpu: 10m
  #   memory: 20Mi
  # requests:
  #   cpu: 10m
  #   memory: 20Mi

  service:
    annotations: {}
    clusterIP: "172.20.118.166"

    ## List of IP addresses at which the default backend service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 80
    type: ClusterIP

  priorityClassName: ""

## Enable RBAC as per https://github.com/kubernetes/ingress/tree/master/examples/rbac/nginx and https://github.com/kubernetes/ingress/issues/266
rbac:
  create: true

# If true, create & use Pod Security Policy resources
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: false

serviceAccount:
  create: true
  name:

## Optional array of imagePullSecrets containing private registry credentials
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagePullSecrets:
# - name: ecr-creds

# TCP service key:value pairs
# Ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/tcp
##
tcp: {}
#  8080: "default/example-tcp-svc:9000"

# UDP service key:value pairs
# Ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/udp
##
udp: {}
#  53: "kube-system/kube-dns:53"
